bandit.labs.overthewire.org

Commands:

level 0->1          (cat)

level 1->2          (cat ./-)
level 2->3          (cat "spaces in this filename")
level 3->4          (cd inhere  ,   cat .hidden)
level 4->5          (cd inhere,    cat ./-file07)
level 5->6          (cd inhere,    cat ./maybehere07/.file2)
level 6->7          (find / -type f -user bandit7 -group bandit6 -size 33c 2>/dev/null,                                                                                                                                                                                                                                                                        cat /var/lib/dpkg/info/bandit7.password)
level 7->8          (grep "millionth" data.txt)
level 8->9          (cat data.txt | sort | uniq -u)
level 9->10         (strings data.txt,  grep -aPo '=+\s*\K[^=]+' data.txt | grep -aE '^[[:print:]]+$')
level 10->11        (base64 -d data.txt)
level 11->12        (tr 'A-Za-z' 'N-ZA-Mn-za-m' < data.txt)
level 12->13        (	->  mkdir /tmp/myname123                                  (Make Directory)
			->  cp data.txt /tmp/myname123/                           (This command copies the file data.txt to the temporary directory.)
			->  cd /tmp/myname123                                     (Change Directory)
			->  file data.txt                                         (To determine file type)
			->  xxd -r data.txt > binary_data                         (Converting hexdump file to binary file)
			->  (gzip -d binary_data.gz, bzip2 -d binary_data.bz2)    (Decompress the File)
			->  cat binary_data                                       (View Contents)
		    )
level 13->14        (ls, ssh -l sshkey.private bandit14@localhost -p 220,    cat /etc/bandit_pass/bandit14)
level 14->15        (nc localhost 30000,   <password of level 14>)
level 15->16        (Openssl s_client-ign_eof -connect localhost:30001,    <current_password of level 15)
         


My Learnings:  
1) The cat command in SSH is used to display the contents of a file.  (cat)
2) To see password for the next level which is stored in a file called - located in the home directory we use (cat ./-)
3) To see password for the next level which is stored in a file called "spaces in this filename" located in the home directory (cat "spaces in this filename")
4) To see password for the next level which is stored in a hidden file in the inhere directory. (cd inhere  ,   cat .hidden)
5) The password for the next level is stored in the only human-readable file in the inhere directory.  (cd inhere,    cat ./-file07)
6) The password for the next level is stored in a file somewhere under the inhere directory and has all of the following properties:
		human-readable
		1033 bytes in size
		not executable
				(cd inhere,    cat ./maybehere07/.file2)

7) The password for the next level is stored somewhere on the server and has all of the following properties:
		owned by user bandit7
		owned by group bandit6
		33 bytes in size
				(find / -type f -user bandit7 -group bandit6 -size 33c 2>/dev/null,                                                                                                                                                                                                                                                                      				cat /var/lib/dpkg/info/bandit7.password)
Syntax for find-  find [path] [options] [expression]
'2>/dev/null' essentially means "redirect standard error to /dev/null," which implies that any error messages or warnings generated by the find command will be discarded or ignored.


8) The password for the next level is stored in the file data.txt next to the word millionth  (grep "millionth" data.txt)

The grep command in SSH (Secure Shell) is used to search for a specific pattern or regular expression within a file or a stream of text.
Syntax- grep [options] pattern [file(s)]


9) The password for the next level is stored in the file data.txt and is the only line of text that occurs only once.
		(cat data.txt | sort | uniq -u)

uniq -u: This command removes adjacent duplicate lines from the sorted input. The -u option ensures that only unique lines are retained, and any duplicates are discarded.

10) The password for the next level is stored in the file data.txt in one of the few human-readable strings, preceded by several ‘=’ characters.
		(strings data.txt,  grep -aPo '=+\s*\K[^=]+' data.txt | grep -aE '^[[:print:]]+$')
-a : treats input file as binary data
-o : outputs only matched part of line


11) The password for the next level is stored in the file data.txt, which contains base64 encoded data
		(base64 -d data.txt)
-d: This option specifies the decoding mode.


12) The password for the next level is stored in the file data.txt, where all lowercase (a-z) and uppercase (A-Z) letters have been rotated by 13 positions
		(tr 'A-Za-z' 'N-ZA-Mn-za-m' < data.txt)
'tr' command to perform a simple Caesar cipher encryption or rotation of characters
A-Za-z' 'N-ZA-Mn-za-m': Specifies a character translation table. In this case, it's a simple Caesar cipher that shifts each letter by 13 positions. For example, 'A' becomes 'N,' 'B' becomes 'O,' and so on. The same rotation is applied to both uppercase and lowercase letters.


13) The password for the next level is stored in the file data.txt, which is a hexdump of a file that has been repeatedly compressed. For this level it may be useful to create a directory under /tmp in which you can work using mkdir. For example: mkdir /tmp/myname123. Then copy the datafile using cp, and rename it using mv (read the manpages!)

		->  mkdir /tmp/myname123                                  (Make Directory)
		->  cp data.txt /tmp/myname123/                           (This command copies the file data.txt to the temporary directory.)
		->  cd /tmp/myname123                                     (Change Directory)
		->  file data.txt                                         (To determine file type)
		->  xxd -r data.txt > binary_data                         (Converting hexdump file to binary file)
		->  (gzip -d binary_data.gz, bzip2 -d binary_data.bz2)    (Decompress the File)
		->  cat binary_data                                       (View Contents)

14) The password for the next level is stored in /etc/bandit_pass/bandit14 and can only be read by user bandit14. For this level, you don’t get the next password, but you get a private SSH key that can be used to log into the next level. Note: localhost is a hostname that refers to the machine you are working on
		(ls, ssh -l sshkey.private bandit14@localhost -p 220,    cat /etc/bandit_pass/bandit14)



15) The password for the next level can be retrieved by submitting the password of the current level to port 30000 on localhost.
		(nc localhost 30000,   <password of level 14>)



16) The password for the next level can be retrieved by submitting the password of the current level to port 30001 on localhost using SSL encryption.
		(Openssl s_client-ign_eof -connect localhost:30001,    <current_password of level 15)		









